# Railway Environment Variables Example
# Copy these variables to Railway's environment variables section

# === REQUIRED VARIABLES ===

# Django Settings
SECRET_KEY=django-insecure-generate-a-secure-key-for-production
DEBUG=False
DJANGO_SETTINGS_MODULE=config.settings_production

# === AUTO-PROVIDED BY RAILWAY ===
# These are automatically set by Railway when you add services:
# DATABASE_URL - PostgreSQL database URL (add PostgreSQL service)
# REDIS_URL - Redis URL (add Redis service)
# PORT - Port number for the application
# RAILWAY_PUBLIC_DOMAIN - Your app's public domain
# RAILWAY_ENVIRONMENT - Current environment (production/staging)

# === OPTIONAL VARIABLES ===

# CORS Settings (Update with your frontend URL)
CORS_ALLOWED_ORIGINS=https://your-frontend-domain.com,https://your-frontend.railway.app

# Email Settings (for SendGrid or Gmail)
EMAIL_HOST=smtp.gmail.com
EMAIL_PORT=587
EMAIL_HOST_USER=your-email@gmail.com
EMAIL_HOST_PASSWORD=your-app-specific-password
EMAIL_USE_TLS=True

# Django Superuser (for auto-creation on first deploy)
DJANGO_SUPERUSER_USERNAME=admin
DJANGO_SUPERUSER_EMAIL=admin@example.com
DJANGO_SUPERUSER_PASSWORD=change-this-secure-password

# Sentry Error Tracking (Optional)
SENTRY_DSN=https://your-sentry-dsn@sentry.io/project-id

# Application Settings
APP_VERSION=1.0.0
HEALTH_CHECK_SIMPLE=true
STARTUP_PHASE=false

# Logging Levels
LOG_LEVEL=INFO
DJANGO_LOG_LEVEL=INFO

# Security (set these to actual values in production)
ALLOWED_HOSTS=.railway.app,your-custom-domain.com

# === DEPLOYMENT NOTES ===
# 1. Add a PostgreSQL service in Railway for database
# 2. Add a Redis service in Railway for WebSocket support
# 3. Set up a Volume for persistent media storage at path: /app/media
# 4. Use custom domain or Railway-provided domain for CORS_ALLOWED_ORIGINS
# 5. Generate a secure SECRET_KEY using: python -c "from django.core.management.utils import get_random_secret_key; print(get_random_secret_key())"